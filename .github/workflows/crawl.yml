name: Crawl Subsidies
on:
  schedule: [ { cron: "5 * * * *" } ]
  workflow_dispatch: {}

jobs:
  crawl:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11", cache: "pip" }
      - run: python -m pip install -U pip setuptools wheel
      - run: pip install -r requirements.txt

      - name: Run orchestrator
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          VERTEX_SERVING_CONFIG: ${{ secrets.VERTEX_SERVING_CONFIG }}
          RUN_ID: ${{ github.run_id }}

          # 無料枠ガード（例：月9000、1Run=50）
          VERTEX_Q_MONTH_LIMIT: "9000"
          VERTEX_Q_PER_RUN: "50"

          # 速攻モード（3分で増やす）
          CONNECT_TIMEOUT: "8"
          READ_TIMEOUT: "25"
          CHUSHO_READ_TIMEOUT: "35"
          TIME_BUDGET_SEC: "180"
          MAX_PAGES_PER_RUN: "60"
          MAX_PER_DOMAIN: "20"
          PARALLEL_WORKERS: "6"
          PER_HOST_LIMIT: "2"
        run: python orchestrator.py

      - name: Summarize last run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RUN_ID: ${{ github.run_id }}
        run: |
          python - <<'PY'
          import os, psycopg, textwrap
          dsn=os.getenv("DATABASE_URL"); run=os.getenv("RUN_ID")
          with psycopg.connect(dsn, autocommit=True) as c, c.cursor() as cur:
              cur.execute("""
                select status, count(*) from public.fetch_log
                 where error like %s group by status order by status
              """, (f"run={run};%",))
              rows=cur.fetchall()
              cur.execute("""
                select sum((regexp_match(error,'candidates=([0-9]+)'))[1]::int)
                  from public.fetch_log where status='list' and error like %s
              """, (f"run={run};%",))
              cand = cur.fetchone()[0] or 0
          md=textwrap.dedent(f"## Crawl Summary (run {run})\n- Candidates discovered: **{cand}**\n- Status counts:\n")
          for s,n in rows: md += f"  - {s}: **{n}**\n"
          open(os.environ['GITHUB_STEP_SUMMARY'],'a',encoding='utf-8').write(md)
          PY
